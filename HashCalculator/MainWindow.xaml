<Window
    x:Class="HashCalculator.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:HashCalculator"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="文件哈希值批量计算器"
    Width="1000"
    Height="500"
    d:DataContext="{d:DesignInstance Type=local:AppViewModel}"
    Closing="Window_MainWindow_Closing"
    Icon="/Images/icon.png"
    SnapsToDevicePixels="True"
    mc:Ignorable="d">
    <Window.Resources>
        <local:AlgoTypeBgCvt x:Key="AlgoTypeBgCvt" />
        <local:AlgoTypeNameCvt x:Key="AlgoTypeNameCvt" />
        <local:CmpResFgCvt x:Key="CmpResFgCvt" />
        <local:CmpResBgCvt x:Key="CmpResBgCvt" />
        <local:CmpResTextCvt x:Key="CmpResTextCvt" />
        <local:CmpResBorderCvt x:Key="CmpResBorderCvt" />
        <local:VisibRunningCvt x:Key="VisibRunningCvt" />
        <local:VisibNotCalcCvt x:Key="VisibNotCalcCvt" />
        <local:VisibWaitingCvt x:Key="VisibWaitingCvt" />
        <local:VisibSucceededCvt x:Key="VisibSucceededCvt" />
        <local:VisibCanceledCvt x:Key="VisibCanceledCvt" />
        <local:VisibTotalProgressCvt x:Key="VisibTotalProgressCvt" />
        <local:ButtonEnableCvt x:Key="ButtonEnableCvt" />
        <local:ButtonNotEnableCvt x:Key="ButtonNotEnableCvt" />
        <local:NoColumnCvt x:Key="NoColumnCvt" />
        <local:PauseBtnImgsrcCvt x:Key="PauseBtnImgsrcCvt" />
        <local:PauseBtnTextCvt x:Key="PauseBtnTextCvt" />
        <local:ProgressWidthCvt x:Key="ProgressWidthCvt" />
        <Style
            x:Key="CellStyleNormal"
            TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                VerticalAlignment="Center"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="Background" Value="#5000A6FF" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="CellStyleFileName"
            BasedOn="{StaticResource CellStyleNormal}"
            TargetType="{x:Type DataGridCell}">
            <Setter Property="ToolTip" Value="{Binding Path}" />
            <Setter Property="ToolTipService.BetweenShowDelay" Value="0" />
            <Setter Property="ToolTipService.InitialShowDelay" Value="0" />
            <Setter Property="ToolTipService.ShowDuration" Value="6000" />
        </Style>
        <Style
            x:Key="RowStyleNormal"
            TargetType="{x:Type DataGridRow}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border
                            x:Name="DGR_Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter
                                    Grid.Column="1"
                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <DataGridDetailsPresenter
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                    Visibility="{TemplateBinding DetailsVisibility}" />
                                <DataGridRowHeader
                                    Grid.RowSpan="2"
                                    SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                            </SelectiveScrollingGrid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#64FFFF00" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#64FFFF00" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Margin="4,4,4,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Menu
                VerticalAlignment="Center"
                Background="{x:Null}">
                <MenuItem
                    Click="MenuItem_Settings_Click"
                    Header="设置" />
                <MenuItem
                    Click="MenuItem_UsingHelp_Click"
                    Header="帮助" />
            </Menu>
            <CheckBox
                x:Name="uiCheckBox_WindowTopMost"
                Grid.Column="1"
                Margin="0,0,16,0"
                Padding="4,0,0,0"
                VerticalAlignment="Center"
                Background="Transparent"
                Click="CheckBox_WindowTopmost_Click"
                Content="窗口置顶" />
            <TextBlock
                Grid.Column="2"
                VerticalAlignment="Center"
                Text="算法：" />
            <ComboBox
                x:Name="uiComboBox_HashAlgorithm"
                Grid.Column="3"
                Width="100"
                Margin="0,0,16,0"
                Padding="6,3,6,3"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                SelectedIndex="0">
                <ComboBoxItem Content="SHA256" />
                <ComboBoxItem Content="SHA1" />
                <ComboBoxItem Content="SHA224" />
                <ComboBoxItem Content="SHA384" />
                <ComboBoxItem Content="SHA512" />
                <ComboBoxItem Content="MD5" />
            </ComboBox>
            <Button
                x:Name="uiButton_SelectFoldersToHash"
                Grid.Column="4"
                Margin="0,0,16,0"
                Padding="12,1,12,1"
                Click="Button_SelectFoldersToHash_Click"
                Content="选择文件夹"
                ToolTip="也可以将文件和文件夹直接拖放到下方表格中。" />
            <Button
                x:Name="uiButton_SelectFilesToHash"
                Grid.Column="5"
                Padding="12,1,12,1"
                Click="Button_SelectFilesToHash_Click"
                Content="选择文件"
                ToolTip="也可以将文件、文件夹直接拖放到下方表格中。" />
        </Grid>
        <Grid
            Grid.Row="1"
            Margin="0,4,0,0">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <!--  代理控件，用于实现 DataGridColumn 的 Visibility 绑定  -->
            <FrameworkElement
                x:Name="dummyElement"
                DataContext="{Binding}"
                Visibility="Collapsed" />
            <DataGrid
                x:Name="uiDataGrid_HashFiles"
                AllowDrop="True"
                AutoGenerateColumns="False"
                Background="Transparent"
                CellStyle="{StaticResource CellStyleNormal}"
                Drop="DataGrid_FilesToCalculate_Drop"
                HeadersVisibility="Column"
                HorizontalGridLinesBrush="#FF969696"
                ItemsSource="{Binding HashViewModels}"
                PreviewKeyDown="DataGrid_HashFiles_PrevKeyDown"
                RowHeight="28"
                RowStyle="{StaticResource RowStyleNormal}"
                SelectionMode="Single"
                VerticalGridLinesBrush="#FF969696">
                <DataGrid.Columns>
                    <DataGridTextColumn
                        Binding="{Binding Serial}"
                        Header="序号"
                        IsReadOnly="True" />
                    <DataGridTextColumn
                        MinWidth="180"
                        Binding="{Binding Name}"
                        CellStyle="{StaticResource CellStyleFileName}"
                        Header="文件名"
                        IsReadOnly="True" />
                    <DataGridTemplateColumn
                        MinWidth="210"
                        Header="哈希值">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid VerticalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock
                                        Grid.Column="0"
                                        Padding="4,2,4,2"
                                        VerticalAlignment="Center"
                                        Background="{Binding HashName, Converter={StaticResource AlgoTypeBgCvt}}"
                                        Text="{Binding HashName, Converter={StaticResource AlgoTypeNameCvt}}" />
                                    <!--  不在计算状态  -->
                                    <TextBlock
                                        Grid.Column="1"
                                        Margin="4,0,4,0"
                                        VerticalAlignment="Center"
                                        Text="{Binding Hash}"
                                        ToolTip="{Binding ModelDetails}"
                                        ToolTipService.BetweenShowDelay="0"
                                        ToolTipService.InitialShowDelay="0"
                                        ToolTipService.ShowDuration="60000"
                                        Visibility="{Binding State, Converter={StaticResource VisibNotCalcCvt}}" />
                                    <!--  正在计算状态  -->
                                    <ProgressBar
                                        Grid.Column="1"
                                        Width="{Binding HashName, Converter={StaticResource ProgressWidthCvt}}"
                                        Height="6"
                                        Margin="4"
                                        HorizontalAlignment="Left"
                                        Foreground="#8000B4E7"
                                        Maximum="{Binding ProgressTotal}"
                                        Visibility="{Binding State, Converter={StaticResource VisibRunningCvt}}"
                                        Value="{Binding Progress}" />
                                    <Button
                                        Grid.Column="2"
                                        Padding="3,3,3,3"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        BorderThickness="0"
                                        Click="Button_CancelHashModel_Click"
                                        ToolTip="停止..."
                                        ToolTipService.BetweenShowDelay="0"
                                        ToolTipService.InitialShowDelay="0"
                                        Visibility="{Binding State, Converter={StaticResource VisibRunningCvt}}">
                                        <Image
                                            Source="/Images/stop.png"
                                            Stretch="None" />
                                    </Button>
                                    <Button
                                        Grid.Column="3"
                                        Padding="3,3,3,3"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        BorderThickness="0"
                                        Click="Button_PauseHashModel_Click"
                                        ToolTip="{Binding State, Converter={StaticResource PauseBtnTextCvt}}"
                                        ToolTipService.BetweenShowDelay="0"
                                        ToolTipService.InitialShowDelay="0"
                                        Visibility="{Binding State, Converter={StaticResource VisibRunningCvt}}">
                                        <Image
                                            Source="{Binding State, Converter={StaticResource PauseBtnImgsrcCvt}}"
                                            Stretch="None" />
                                    </Button>
                                    <!--  正排队  -->
                                    <Button
                                        Grid.Column="3"
                                        Padding="3,3,3,3"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        BorderThickness="0"
                                        Click="Button_CancelHashModel_Click"
                                        ToolTip="取消..."
                                        ToolTipService.BetweenShowDelay="0"
                                        ToolTipService.InitialShowDelay="0"
                                        Visibility="{Binding State, Converter={StaticResource VisibWaitingCvt}}">
                                        <Image
                                            Source="/Images/cancel.png"
                                            Stretch="None" />
                                    </Button>
                                    <!--  已成功  -->
                                    <Button
                                        Grid.Column="2"
                                        Padding="3,3,3,3"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        BorderThickness="0"
                                        Click="Button_RestartHashModel_CLick"
                                        ToolTip="刷新..."
                                        ToolTipService.BetweenShowDelay="0"
                                        ToolTipService.InitialShowDelay="0"
                                        Visibility="{Binding Result, Converter={StaticResource VisibSucceededCvt}}">
                                        <Image
                                            Source="/Images/refresh.png"
                                            Stretch="None" />
                                    </Button>
                                    <Button
                                        Grid.Column="3"
                                        Padding="3,3,3,3"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        BorderThickness="0"
                                        Click="Button_CopyHashValue_Click"
                                        ToolTip="复制..."
                                        ToolTipService.BetweenShowDelay="0"
                                        ToolTipService.InitialShowDelay="0"
                                        Visibility="{Binding Result, Converter={StaticResource VisibSucceededCvt}}">
                                        <Image
                                            Source="/Images/copy.png"
                                            Stretch="None" />
                                    </Button>
                                    <!--  已取消  -->
                                    <Button
                                        Grid.Column="3"
                                        Padding="3,3,3,3"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        BorderThickness="0"
                                        Click="Button_RestartHashModel_CLick"
                                        ToolTip="开始..."
                                        ToolTipService.BetweenShowDelay="0"
                                        ToolTipService.InitialShowDelay="0"
                                        Visibility="{Binding Result, Converter={StaticResource VisibCanceledCvt}}">
                                        <Image
                                            Source="/Images/start.png"
                                            Stretch="None" />
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn
                        MinWidth="80"
                        Binding="{Binding DurationofTask}"
                        Header="运行时长(秒)"
                        IsReadOnly="True"
                        Visibility="{Binding DataContext.NoDurationColumn, Converter={StaticResource NoColumnCvt}, Source={x:Reference dummyElement}}" />
                    <DataGridCheckBoxColumn
                        MinWidth="50"
                        Binding="{Binding Export}"
                        Header="导出"
                        Visibility="{Binding DataContext.NoExportColumn, Converter={StaticResource NoColumnCvt}, Source={x:Reference dummyElement}}" />
                    <DataGridTemplateColumn
                        MinWidth="60"
                        Header="校验结果">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Label
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Background="{Binding CmpResult, Converter={StaticResource CmpResBgCvt}}"
                                    BorderBrush="Transparent"
                                    BorderThickness="{Binding CmpResult, Converter={StaticResource CmpResBorderCvt}}"
                                    Content="{Binding CmpResult, Converter={StaticResource CmpResTextCvt}}"
                                    FontSize="8pt"
                                    Foreground="{Binding CmpResult, Converter={StaticResource CmpResFgCvt}}"
                                    ToolTip="{Binding DataContext.Report, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}, AncestorLevel=1}}"
                                    ToolTipService.BetweenShowDelay="0"
                                    ToolTipService.InitialShowDelay="0"
                                    ToolTipService.ShowDuration="60000" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Grid
                Grid.Row="1"
                Margin="0,4,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    VerticalAlignment="Center"
                    Text="文件哈希值批量校验依据：" />
                <ComboBox
                    x:Name="uiComboBox_ComparisonMethod"
                    Grid.Column="1"
                    MinWidth="100"
                    Padding="6,4,5,4"
                    VerticalAlignment="Center"
                    SelectedIndex="0">
                    <ComboBoxItem Content="文本文件" />
                    <ComboBoxItem Content="单个哈希值" />
                </ComboBox>
                <TextBox
                    x:Name="uiTextBox_HashValueOrFilePath"
                    Grid.Column="2"
                    Margin="8,0,0,0"
                    Padding="1,2,1,2"
                    MaxLines="1"
                    PreviewDragOver="TextBox_HashValueOrFilePath_PreviewDragOver"
                    PreviewDrop="TextBox_HashValueOrFilePath_PreviewDrop"
                    TextChanged="TextBox_HashValueOrFilePath_Changed" />
                <Button
                    Grid.Column="3"
                    Margin="8,0,0,0"
                    Padding="8,1,8,1"
                    Click="Button_SelectHashSetFile_Click"
                    Content="..." />
                <Button
                    x:Name="uiButton_StartCompare"
                    Grid.Column="4"
                    Margin="8,0,0,0"
                    Padding="16,1,16,1"
                    Click="Button_StartCompare_Click"
                    Content="校验"
                    IsEnabled="{Binding State, Converter={StaticResource ButtonEnableCvt}}"
                    ToolTip="当面板为空时，如果校验依据选择的是通用格式的哈希值文本文件，则：&#10;点击&#x3C;校验&#x3E;后程序会自动解析文件并在相同目录下寻找要计算哈希值的文件完成计算并显示校验结果。&#10;通用格式的哈希值文件请参考程序&#x3C;导出结果&#x3E;功能导出的文件的内容排布格式。" />
            </Grid>
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid Margin="0,0,8,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            x:Name="uiTextBlock_CompletedTotal"
                            VerticalAlignment="Center"
                            Text="完成进度："
                            Visibility="{Binding State, Converter={StaticResource VisibTotalProgressCvt}}" />
                        <TextBlock
                            x:Name="uiTextBlock_CompletedCount"
                            Grid.Column="1"
                            VerticalAlignment="Center"
                            Text="{Binding FinishedInQueue}"
                            Visibility="{Binding State, Converter={StaticResource VisibTotalProgressCvt}}" />
                        <TextBlock
                            x:Name="uiTextBlock_Delimiter"
                            Grid.Column="2"
                            VerticalAlignment="Center"
                            Text=" / "
                            Visibility="{Binding State, Converter={StaticResource VisibTotalProgressCvt}}" />
                        <TextBlock
                            x:Name="uiTextBlock_TotalTaskCount"
                            Grid.Column="3"
                            VerticalAlignment="Center"
                            Text="{Binding TotalNumberInQueue}"
                            Visibility="{Binding State, Converter={StaticResource VisibTotalProgressCvt}}" />
                    </Grid>
                    <ProgressBar
                        x:Name="uiProgressbar_TaskProgress"
                        Grid.Row="1"
                        Height="8"
                        Margin="0,0,0,8"
                        VerticalAlignment="Center"
                        Maximum="{Binding TotalNumberInQueue}"
                        Visibility="{Binding State, Converter={StaticResource VisibTotalProgressCvt}}"
                        Value="{Binding FinishedInQueue}" />
                </Grid>
                <Button
                    x:Name="uiButton_ClearModels"
                    Grid.Column="1"
                    Margin="4,8,4,8"
                    Padding="16,4,16,4"
                    Click="Button_ClearFileList_Click"
                    Content="清空面板"
                    IsEnabled="{Binding State, Converter={StaticResource ButtonEnableCvt}}"
                    ToolTip="清空面板中显示的所有的行。" />
                <Button
                    x:Name="uiButton_ExportAsText"
                    Grid.Column="2"
                    Margin="4,8,4,8"
                    Padding="16,4,16,4"
                    Click="Button_ExportAsTextFile_Click"
                    Content="导出结果"
                    IsEnabled="{Binding State, Converter={StaticResource ButtonEnableCvt}}"
                    ToolTip="导出面板中的计算结果。没有计算结果的行不会被导出，&quot;导出&quot;列没有选中的也不会被导出。" />
                <Button
                    x:Name="uiButton_ContinueAllTask"
                    Grid.Column="3"
                    Margin="4,8,4,8"
                    Padding="16,4,16,4"
                    Click="Button_ContinueAllTask_Click"
                    Content="继续"
                    IsEnabled="{Binding State, Converter={StaticResource ButtonNotEnableCvt}}"
                    ToolTip="继续全部已暂停的哈希值计算任务。" />
                <Button
                    x:Name="uiButton_PauseAllTask"
                    Grid.Column="4"
                    Margin="4,8,4,8"
                    Padding="16,4,16,4"
                    Click="Button_PauseAllTask_Click"
                    Content="暂停"
                    IsEnabled="{Binding State, Converter={StaticResource ButtonNotEnableCvt}}"
                    ToolTip="暂停全部正在运行的哈希值计算任务。" />
                <Button
                    x:Name="uiButton_CancelAllTask"
                    Grid.Column="5"
                    Margin="4,8,4,8"
                    Padding="16,4,16,4"
                    Click="Button_CancelAllTask_Click"
                    Content="取消"
                    IsEnabled="{Binding State, Converter={StaticResource ButtonNotEnableCvt}}"
                    ToolTip="取消全部排队中、运行中和已暂停的哈希值计算任务。" />
                <Button
                    x:Name="uiButton_RefreshCopy"
                    Grid.Column="6"
                    Margin="4,8,4,8"
                    Padding="16,4,16,4"
                    Click="Button_CopyRefreshHash_Click"
                    Content="新行重算"
                    IsEnabled="{Binding State, Converter={StaticResource ButtonEnableCvt}}"
                    ToolTip="以&quot;算法&quot;下拉选择框选择的算法为准，计算表格中所有文件的哈希值，但不清除原来的计算结果，而是增加新的行来显示结果。" />
                <Button
                    x:Name="uiButton_RefreshCurrentHash"
                    Grid.Column="7"
                    Margin="4,8,0,8"
                    Padding="16,4,16,4"
                    Click="Button_RefreshCurrentHash_Click"
                    Content="重新计算"
                    IsEnabled="{Binding State, Converter={StaticResource ButtonEnableCvt}}"
                    ToolTip="以&quot;算法&quot;下拉选择框选择的算法为准，重新计算表格中所有文件的哈希值或未完成计算的文件的哈希值。" />
            </Grid>
        </Grid>
    </Grid>
</Window>
